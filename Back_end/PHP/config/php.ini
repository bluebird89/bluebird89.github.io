zend_extension=opcache.so

opcache.enable_cli=1
opcache.enable=1
# 生产环境中配置为0：因为ZendOpcache将不能觉察PHP脚本的变化，必须手动清空ZendOPcache缓存的字节码，才能让它发现PHP文件的变动。这个配置适合在生产环境中设置为0，但在开发环境设置为1
opcache.validate_timestamps=1
# 检查脚本时间戳是否有更新时间设置多久（单位是秒）检查一次PHP脚本内容是否有变化。设置为0秒的含义是仅当opcache.validate_timestamps 设置为1时，才会在每次请求时都重新验证 PHP 文件，因此，在开发环境中每次都会重新验证 PHP 文件，在生产环境中则不验证。
# 设置的值为1时，经过一段时间后 PHP 会检查 PHP 脚本的内容是否有变化，检查的时间间隔由 opcache.revalidate_freq设置指定。如果这个设置的值为0，PHP 不会检查 PHP 脚本的内容是否有变化，我们必须自己动手清除缓存的操作码。建议在开发环境中设置为1，生产环境中设置为0。
opcache.revalidate_freq=240
opcache.memory_consumption=64    # Opcache共享内存大小，以M为单位
# 用来存储临时字符串的内存大小，以M为单位.默认情况下，PHP 驻留字符串会隔离在各个 PHP 进程中，这个设置能让 PHP-FPM 进程池把所有进程驻留字符串存储到共享的缓冲区中，以便在 PHP-FPM 进程池中的多个进程之间引用驻留字符串，这样能节省更多内存
opcache.interned_strings_buffer=16
# Opcache哈希表可以存储的脚本文件数量上限,对多缓存文件限制, 命中率不到 100% 的话, 可以试着提高这个值.值的区间是 2000 到 100000 之间，这个值一定要比 PHP 应用中的文件数大。
opcache.max_accelerated_files=4000
# 使用快速停止续发事件 能让操作码使用更快的停机步骤，把对象析构和内存释放交给 Zend Engine 的内存管理器完成。
opcache.fast_shutdown=1

opcache.jit=1235
opcache.jit_buffer_size=64M

file_uploads = 1 # 设置太大，否则会出现超时
upload_max_filesize = 10M
max_file_uploads = 3

# 设置单个 PHP 进程在终止之前最长可运行时间, 脚本中可以调用 set_limit_time() 函数覆盖这个设置
max_execution_time = 5
# 设定单个 PHP 进程可以使用的系统内存最大值,默认值是 128M
memory_limit

# 防止变量覆盖：
register_globals=off
# 防止越权访问目录：
open_basedir=/var/www/html（指定目录）
# 防止远程文件包含：
allow_url_include=off and allow_url_fopen=off
# 防止显示详细的错误信息：
display_errors=off
# 记录错误在日志文件中：
log_errors=on
# 关闭不安全的字符串转义处理函数（防SQLi和XSS）：
magic_quotes_gpc=off
# 如果PHP以CGI方式安装则需要关闭：
cgi.fix_pathinfo=0

# 默认会话处理程序会拖慢大型应用
session.save_handler = 'memcached'
session.save_path = '127.0.0.1:11211'

# 防御XSS（开启HttpOnly）
session.cookie_httponly=1
# HTTPS下提高安全性：
session.cookie_secure=1

# 在较少的片段中把内容传递给访问者的浏览器，能减少 HTTP 请求总数
output_buffering = 4096
implicit_flush = false

# 会缓存应用使用的文件路径，这样每次包含或导入文件时就无需不断搜索包含路径了
# 增加真实路径缓存的大小，设置为特别大的一个值，如 256K，然后，在一个 PHP 脚本的末尾加上 print_r(realpath_cache_size());，输出真实路径缓存的真正大小
realpath_cache_size = 64K

### 开发环境
;显示错误
display_startup_errors = On
display_errors = On
;报告所有错误
error_reporting = -1
;记录错误
log_errors = On
### 开发环境

### 生产环境
;不显示错误
display_startup_errors = Off
display_errors = Off
;除了notice级别错误外，报告所有其他错误
error_reporting = E_ALL & ~E_NOTICE
;记录错误
log_errors = On
### 生产环境

zend_extension=xdebug.so
xdebug.remote_enable=1
xdebug.remote_host=localhost
xdebug.remote_port=9001
xdebug.remote_autostart=1

xdebug.profiler_enable = 0
xdebug.profiler_enable_trigger = 1
xdebug.profiler_output_dir = /path/to/profiler/results

xdebug.profiler_output_dir="/tmp"
xdebug.idekey=PHPSTORM
